var documenterSearchIndex = {"docs":
[{"location":"#User-Guide","page":"User Guide","title":"User Guide","text":"","category":"section"},{"location":"","page":"User Guide","title":"User Guide","text":"","category":"page"},{"location":"#Overview","page":"User Guide","title":"Overview","text":"","category":"section"},{"location":"","page":"User Guide","title":"User Guide","text":"CoinbaseProExchange.jl provides a Julia wrapper for the Coinbase Pro REST API. Available endpoints are implemented in the form of callable functions. Depending on the operation, a function can return data (either as a DataFrame or Dict) or the associated HTTP response (Dict).","category":"page"},{"location":"#Available-functions","page":"User Guide","title":"Available functions","text":"","category":"section"},{"location":"","page":"User Guide","title":"User Guide","text":"","category":"page"},{"location":"#Public-endpoints-(Coinbase-Pro-account-is-not-necessary)","page":"User Guide","title":"Public endpoints (Coinbase Pro account is not necessary)","text":"","category":"section"},{"location":"","page":"User Guide","title":"User Guide","text":"show_server_time(time_type::String=\"iso\")\n\nshow_historical_data(pair::String, interval::Int64=300)\n\nshow_all_products(currency::String=\"USD\")\n\nshow_latest_trades(pair::String)\n\nshow_product_data(pair::String, endpoint::String=\"24hr stats\")\n\nplot_historical_price(pair::String, interval::Int64 = 300)\n\nplot_historical_vol(pair::String, interval::Int64 = 300)","category":"page"},{"location":"#CoinbaseProExchange.show_server_time","page":"User Guide","title":"CoinbaseProExchange.show_server_time","text":"show_server_time(time_type::String)\n\nGet the API server time.\n\nArguments\n\ntime_type::String : \"iso\" (default) or \"epoch\" (represents decimal seconds since Unix epoch)\n\nExample\n\njulia> show_server_time(\"iso\")\n\"2021-07-06T22:09:17.231Z\"\n\n\n\n\n\n","category":"function"},{"location":"#CoinbaseProExchange.show_historical_data","page":"User Guide","title":"CoinbaseProExchange.show_historical_data","text":"show_historical_data(pair::String, interval::Int64)\n\nFetch historic rates for a product.\n\nArguments\n\npair::String : Specify currency pair, for example \"ETH-EUR\" \ninterval::Int64 : Rates are returned in grouped buckets based on specified interval.                      Choose one from [60, 300 (default), 900, 3600, 21600, 86400], all in seconds.\n\nExample\n\njulia> show_historical_data(\"ETH-EUR\", 3600)\n300×6 DataFrame\n Row │ time                 low      high     open     close    volume  \n     │ Any                  Any      Any      Any      Any      Any     \n─────┼──────────────────────────────────────────────────────────────────\n   1 │ 2021-06-24T11:00:00  1619.45  1650.91  1619.45  1648.84  407.623\n   2 │ 2021-06-24T12:00:00  1644.02  1665.64  1648.05  1655.5   446.389\n\n\n\n\n\n","category":"function"},{"location":"#CoinbaseProExchange.show_all_products","page":"User Guide","title":"CoinbaseProExchange.show_all_products","text":"show_all_products(currency::String)\n\nFetch list of all available products for a given currency.\n\nArguments\n\ncurrency::String : \"EUR\", \"USD\" (default), \"GBP\" etc.\n\nExample\n\njulia> show_all_products(\"EUR\")\n40-element Vector{String}:\n \"ETC-EUR\"\n \"SNX-EUR\"\n\n\n\n\n\n","category":"function"},{"location":"#CoinbaseProExchange.show_latest_trades-Tuple{String}","page":"User Guide","title":"CoinbaseProExchange.show_latest_trades","text":"show_latest_trades(pair::String)\n\nFetch list of latest trades for a given product.\n\nArguments\n\npair::String : Specify currency pair, for example \"ETH-EUR\" \n\nExample\n\njulia> show_latest_trades(\"ETH-EUR\")\n1000×5 DataFrame\n  Row │ time                      price    side    size        trade_id \n      │ Any                       Float64  String  Float64     Int64    \n──────┼─────────────────────────────────────────────────────────────────\n    1 │ 2021-07-06T22:23:54.963Z  1949.03  sell    0.101       22822595\n    2 │ 2021-07-06T22:23:53.612Z  1948.85  sell    0.0187214   22822594\n\n\n\n\n\n","category":"method"},{"location":"#CoinbaseProExchange.show_product_data","page":"User Guide","title":"CoinbaseProExchange.show_product_data","text":"show_product_data(pair::String, endpoint::String)\n\nFetch product data based on the selected endpoint.\n\nArguments\n\npair::String : Specify currency pair, for example \"ETH-EUR\" \nendpoint::String : Select one from [\"24hr stats\" (default), \"product info\", \"product ticker\",                                        \"order book 1\", \"order book 2\", \"order book 3\"]\n\nExample\n\njulia> show_product_data(\"BTC-EUR\", \"24hr stats\")\n1×6 DataFrame\n Row │ high      last      low       open      volume         volume_30day   \n     │ String    String    String    String    String         String         \n─────┼───────────────────────────────────────────────────────────────────────\n   1 │ 29620.29  28740.89  28362.27  28642.14  1058.30490447  57346.67861744\n\n\n\n\n\n","category":"function"},{"location":"#CoinbaseProExchange.plot_historical_price","page":"User Guide","title":"CoinbaseProExchange.plot_historical_price","text":"plot_historical_price(pair::String, interval::Int64 = 300)\n\nPlot historical price data in the REPL.\n\nArguments\n\npair::String : Specify currency pair, for example \"ETH-EUR\"\ninterval::Int64 : Rates are returned in grouped buckets based on specified interval.                     Choose one from [60, 300 (default), 900, 3600, 21600, 86400], all in seconds.\n\nExample\n\njulia> plot_historical_price(\"ETH-EUR\", 86400)\n                             ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Closing price for ETH-EUR in intervals of 86400 seconds⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                             ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                       2 400 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣆⡆⠀⠀⠀⠀┃ \n                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢻⢳⡀⠀⠀⠀┃ \n                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠈⠀⢱⠀⠀⠀┃ \n                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⡄⠀⠀⠀⡀⣠⠀⡜⠀⠀⢸⠀⣠⡀┃ \n                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠃⣷⡄⢰⡆⣷⣿⡀⡇⠀⠀⢸⢠⡟⠉┃ \n                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠋⢣⡸⠹⠃⠸⠻⠃⠀⠀⠈⠋⠀⠀┃ \n                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⢸⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n   Closing price [EUR]       ┃⢰⢻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⣧⠀⡴⢆⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                             ┃⡸⢸⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⢿⡰⡇⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                             ┃⡇⠈⡆⠀⠀⢸⡇⠀⠀⠀⠀⢰⢢⢢⡄⠀⠀⠀⣀⢀⠞⡆⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⡾⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                             ┃⠁⠀⢷⡼⢻⡞⢣⡄⢀⣠⣾⠞⠈⠸⢳⠀⠀⢸⠋⢿⠀⠱⠶⡏⠢⢦⡠⠦⣆⣠⠤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⡞⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                             ┃⠀⠀⠀⠁⠀⠀⠀⠙⠁⠀⠀⠀⠀⠀⠈⢦⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣆⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⣀⢠⡇⠀⡀⠀⡀⡀⠀⡰⠛⣦⡀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠃⠉⠘⠙⠉⣦⠋⠹⠤⠃⠀⠁⢇⣀⣦⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                       1 400 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                             ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                             ⠀2023-04-11T00:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2024-02-04T00:00:00⠀ \n                             ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n\n\n\n\n\n","category":"function"},{"location":"#CoinbaseProExchange.plot_historical_vol","page":"User Guide","title":"CoinbaseProExchange.plot_historical_vol","text":"plot_historical_vol(pair::String, interval::Int64 = 300)\n\nPlot historical volume data in the REPL.\n\nArguments\n\npair::String : Specify currency pair, for example \"ETH-EUR\"\ninterval::Int64 : Rates are returned in grouped buckets based on specified interval.                     Choose one from [60, 300 (default), 900, 3600, 21600, 86400], all in seconds.\n\nExample\n\njulia> plot_historical_vol(\"ETH-EUR\", 21600)\n                               ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Volume for ETH-EUR in intervals of 21600 seconds⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                               ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                         6 000 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⡇⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⡆⡇⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⣷⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡇⡀⠀⠀⠀⡀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n   Number of coins [ETH]       ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⡇⠀⠀⠀⡇⡀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⢀⣿⡇⡇⠀⠀⠀⣷⡇⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                               ┃⠀⡇⠀⠀⠀⠀⠀⡀⡄⠀⠀⠀⢸⣸⡇⠀⡄⠀⠀⠀⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⡆⠀⡇⠀⠀⢸⣿⣇⢿⠀⠀⠀⣿⣷⠉⣿⢇⠀⣦⠀⠀⠀⡇⠀⠀⠀⡆⡇⠀⡀⡄⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                               ┃⣠⡇⢠⡆⠀⠀⢰⣿⡇⢸⡇⡆⢸⣿⡇⢰⣇⡆⠀⢰⡇⠀⡆⠀⠀⠀⠀⠀⡆⣠⣿⡇⠀⠀⠀⢀⡇⢰⡇⠀⠀⢸⢸⣿⠘⡄⠀⢸⢿⠇⠀⢻⢸⠀⣿⠀⠀⠀⣷⡀⠀⢀⢷⣇⠀⡇⡇⠀⠀⠀⡇⠀⠀⠀⠀┃ \n                               ┃⣿⣧⣼⡇⠀⢀⣸⣿⣇⣸⡇⡇⡜⣿⣷⣿⣿⡇⠀⣼⣧⣧⣷⡀⠀⠀⢀⢰⣧⣿⣿⡇⠀⠀⠀⢸⢣⣿⡇⠀⠀⡜⠀⢿⠀⡇⠀⢸⢸⠀⠀⢸⢸⠀⣿⡄⡇⣧⢻⡇⠀⢸⢸⢻⡇⣇⡇⠀⠀⡆⡇⣷⡆⠀⠀┃ \n                               ┃⣿⣿⣿⡇⢠⣾⣿⣿⣿⡏⡇⣧⠃⣿⢻⣿⣿⣿⡄⡇⢹⢹⣿⣧⡄⠀⢸⣾⣿⣿⢹⡇⣠⠀⢠⣾⠘⣿⡇⠀⠀⡇⠀⢸⠀⡇⠀⡎⠈⠀⠀⠈⢸⣆⡏⣿⢱⢻⢸⡇⠀⢸⢸⢸⢧⣿⢱⠀⠀⡇⣿⣿⢇⡇⠀┃ \n                               ┃⢿⢿⣿⣇⣼⣿⢿⣿⢿⠁⣧⢿⠀⠘⠘⣿⠸⢿⣧⡇⠀⠀⢸⠛⢧⣧⠾⠈⣿⢹⠘⢣⡟⢦⠃⣿⠀⠁⢣⢾⢻⠃⠀⠈⠀⢷⣤⠃⠀⠀⠀⠀⠘⠸⠀⠸⢸⠸⢸⢣⡀⡸⢸⠈⢸⢸⠸⢤⢿⢸⢻⠸⢸⡇⠀┃ \n                             0 ┃⠀⠀⠛⠙⠉⠈⠀⠘⠀⠀⠻⠈⠀⠀⠀⠙⠀⠈⠙⠀⠀⠀⠈⠀⠈⠃⠀⠀⠘⠀⠀⠈⠀⠈⠀⠈⠀⠀⠘⠈⠈⠀⠀⠀⠀⠘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠸⠱⠁⠈⠀⠈⠘⠀⠀⠈⠈⠀⠀⠈⠘⠳┃ \n                               ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                               ⠀2023-11-21T12:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2024-02-04T06:00:00⠀ \n                               ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n\n\n\n\n\n","category":"function"},{"location":"#Private-endpoints-(Coinbase-Pro-account-API-keys-are-needed)","page":"User Guide","title":"Private endpoints (Coinbase Pro account + API keys are needed)","text":"","category":"section"},{"location":"#API-key-should-have-\"trade\"-or-\"view\"-permission","page":"User Guide","title":"API key should have \"trade\" or \"view\" permission","text":"","category":"section"},{"location":"","page":"User Guide","title":"User Guide","text":"show_all_accounts(user_data::UserInfo, currencies::Vector{String})\n\nshow_account_info(user_data::UserInfo, currency::String, info_type::String)\n\nshow_exchange_limits(user_data::UserInfo, currency::String)\n\nshow_fills(user_data::UserInfo, pair::String)\n\nshow_transfers(user_data::UserInfo, transfer_type::String=\"deposit\")\n\nshow_fees(user_data::UserInfo)\n\nshow_profiles(user_data::UserInfo)","category":"page"},{"location":"#CoinbaseProExchange.show_all_accounts-Tuple{UserInfo, Vector{String}}","page":"User Guide","title":"CoinbaseProExchange.show_all_accounts","text":"show_all_accounts(user_data::UserInfo, currencies::Vector{String})\n\nFetch summary of all cryptocurrency accounts associated with the given API key.\n\nArguments\n\nuser_data::UserInfo : API data\ncurrencies::Vector{String} : Can be set to [\"all\"] or a specific set,                                 for example [\"LTC\", \"XTZ\"]\n\nExample\n\njulia> show_all_accounts(user_data, [\"LTC\", \"XTZ\"])\n2×7 DataFrame\n Row │ currency  balance  profile_id                         trading_enabled  id                                 hold  ⋯\n     │ String    Float64  String                             Bool             String                             Float ⋯\n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ LTC           0.0  4617f329-2709-453b-b95d-d14727cb…             true  eed5095d-848e-490c-8738-2f2073e7…      0 ⋯\n   2 │ XTZ           0.0  4617f329-2709-453b-b95d-d14727cb…             true  21f6c731-91f7-44bf-ad9e-97cc2dfb…      0\n\n\n\n\n\n","category":"method"},{"location":"#CoinbaseProExchange.show_account_info-Tuple{UserInfo, String, String}","page":"User Guide","title":"CoinbaseProExchange.show_account_info","text":"show_account_info(user_data::UserInfo, currency::String, info_type::String)\n\nFetch account information for a single cryptocurrency associated with the given API key.\n\nArguments\n\nuser_data::UserInfo : API data\ncurrency::String : Select one, for example [\"ETH\"]\ninfo_type::String : Select one from \"info\", \"history\" or \"holds\"\n\nExample\n\njulia> show_account_info(user_data, \"ETH\", \"history\")\n2×8 DataFrame\n Row │ amount               balance             created_at                   order_id                           produc ⋯\n     │ String               String              String                       String                             String ⋯\n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ -0.0248430100000000  0.0000000000000000  2021-05-09T00:56:06.877638Z  561bd042-9bd8-412f-a905-2a231e77…  ETH-EU ⋯\n   2 │ 0.0248430100000000   0.0248430100000000  2021-05-08T23:52:37.666196Z  496f1b74-5a66-45dd-9f6e-817da994…  ETH-EU\n                                                                                                       4 columns omitted\n\n\n\n\n\n","category":"method"},{"location":"#CoinbaseProExchange.show_exchange_limits-Tuple{UserInfo, String}","page":"User Guide","title":"CoinbaseProExchange.show_exchange_limits","text":"show_exchange_limits(user_data::UserInfo, currency::String)\n\nFetch information on the payment method transfer limit for a given currency.\n\nArguments\n\nuser_data::UserInfo : API data\ncurrency::String : \"ETH, \"BTC\", \"XTZ\" etc.\n\nExample\n\njulia> show_exchange_limits(user_data, \"ETH\")\n5×4 DataFrame\n Row │ payment_method     max         period_in_days  remaining  \n     │ String             Float64     Int64           Float64    \n─────┼───────────────────────────────────────────────────────────\n   1 │ ideal_deposit       14.6423                 1   14.6423\n   2 │ exchange_withdraw  146.423                  1  146.423\n   3 │ secure3d_buy         1.75707                7    1.75707\n   4 │ credit_debit_card    0.585691               7    0.585691\n   5 │ paypal_withdrawal   11.7138                 1   11.7138\n\n\n\n\n\n","category":"method"},{"location":"#CoinbaseProExchange.show_fills-Tuple{UserInfo, String}","page":"User Guide","title":"CoinbaseProExchange.show_fills","text":"show_fills(user_data::UserInfo, pair::String)\n\nGet a list of recent fills of the API key's profile for a given pair.\n\nArguments\n\nuser_data::UserInfo : API data\npair::String : \"ETH-EUR\" etc.\n\nExample\n\njulia> show_fills(user_data, \"ETH-EUR\")\n7×13 DataFrame\n Row │ created_at                fee                 liquidity  order_id                           price   ⋯\n     │ String                    String              String     String                             String  ⋯\n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 2021-07-04T21:54:09.902Z  0.0746268391200000  T          d275ae2b-4f34-4ce9-98a7-1147bccf…  2003.90 ⋯\n   2 │ 2021-07-04T15:43:54.115Z  0.0733968750000000  T          7a019bf8-bee8-4001-bb34-e3d6f3e6…  1957.25\n\n\n\n\n\n","category":"method"},{"location":"#CoinbaseProExchange.show_transfers","page":"User Guide","title":"CoinbaseProExchange.show_transfers","text":"show_transfers(user_data::UserInfo, deposit_type::String=\"deposit\")\n\nGet a list of deposits/withdrawals from the profile of the API key, in descending order by created time.\n\nArguments\n\nuser_data::UserInfo : API data\ndeposit_type::String : \"deposit\" (default), \"internaldeposit\" (transfer between portfolios), \"withdraw\" or \"internalwithdraw\"\n\nExample\n\njulia> show_transfers(user_data, \"internal_deposit\")\n4×7 DataFrame\n Row │ account_id                         amount                created_at                     curren ⋯\n     │ String                             String                String                         String ⋯\n─────┼─────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 6defb94d-80e3-45b4-a6bf-0420cc5f…  10.0000000000000000   2021-07-16 11:10:10.253255+00  EUR    ⋯\n   2 │ 6defb94d-80e3-45b4-a6bf-0420cc5f…  10.0000000000000000   2021-07-16 11:07:48.003446+00  EUR\n\n\n\n\n\n","category":"function"},{"location":"#CoinbaseProExchange.show_fees-Tuple{UserInfo}","page":"User Guide","title":"CoinbaseProExchange.show_fees","text":"show_fees(user_data::UserInfo)\n\nGet current maker & taker fee rates, as well as your 30-day trailing volume.\n\nArguments\n\nuser_data::UserInfo : API data\n\nExample\n\njulia> show_fees(user_data_default)\n1×3 DataFrame\n Row │ maker_fee_rate  taker_fee_rate  usd_volume \n     │ String          String          String     \n─────┼────────────────────────────────────────────\n   1 │ 0.0050          0.0050          117.09\n\n\n\n\n\n","category":"method"},{"location":"#CoinbaseProExchange.show_profiles-Tuple{UserInfo}","page":"User Guide","title":"CoinbaseProExchange.show_profiles","text":"show_profiles(user_data::UserInfo)\n\nGet a list of all user profiles/portfolios.\n\nArguments\n\nuser_data::UserInfo : API data\n\nExample\n\njulia> show_profiles(user_data_default)\n6×6 DataFrame\n Row │ active  created_at                   id                                 is_default  name       ⋯\n     │ Bool    String                       String                             Bool        String     ⋯\n─────┼─────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │   true  2019-06-23T00:19:33.647283Z  dc06c753-2e85-4e2f-b281-3a78bc7b…        true  default    ⋯\n   2 │   true  2021-05-07T21:10:07.037681Z  4617f329-2709-453b-b95d-d14727cb…       false  Julia Bot\n\n\n\n\n\n","category":"method"},{"location":"#API-key-should-have-\"trade\"-permission","page":"User Guide","title":"API key should have \"trade\" permission","text":"","category":"section"},{"location":"","page":"User Guide","title":"User Guide","text":"place_market_order(side::String, pair::String, amount::IntOrFloat, amount_type::String, user_data::UserInfo)\n\nplace_limit_order(side::String, pair::String, amount::IntOrFloat, price::IntOrFloat, user_data::UserInfo)\n\nshow_open_orders(user_data::UserInfo)\n\nshow_single_order(order_ID::String, user_data::UserInfo)\n\ncancel_order(order_id::String, user_data::UserInfo)\n\ncancel_all_orders(user_data::UserInfo)","category":"page"},{"location":"#CoinbaseProExchange.place_market_order-Tuple{String, String, Union{Float64, Int64}, String, UserInfo}","page":"User Guide","title":"CoinbaseProExchange.place_market_order","text":"place_market_order(side::String, pair::String, amount::IntOrFloat, amount_type::String, \n                   user_data::UserInfo)\n\nPlace a market order using the information provided.\n\nArguments\n\nside::String : \"buy\" or \"sell\"\npair::String : Specify currency pair, for example \"ETH-EUR\"\namount::IntOrFloat : Specify amount in base currency (ETH, BTC etc.) or                         quote currency (EUR, USD etc.)\namount_type::String : Select either \"base\" or \"quote\" based on the amount entered\nuser_data::UserInfo : API data\n\nExample\n\njulia> place_market_order(\"buy\", \"ETH-EUR\", 15, \"quote\", user_data)\n[ Info: Order placed\nDict{String, Any} with 14 entries:\n  \"created_at\"      => \"2021-07-04T21:54:09.895868Z\"\n  \"stp\"             => \"dc\"\n  \"product_id\"      => \"ETH-EUR\"\n  \"settled\"         => false\n  \"specified_funds\" => \"15\"\n  \"status\"          => \"pending\"\n  \"id\"              => \"d275ae2b-4f34-4ce9-98a7-1147bccf07ca\"\n  \"executed_value\"  => \"0\"\n  \"post_only\"       => false\n  \"filled_size\"     => \"0\"\n  \"side\"            => \"buy\"\n  \"fill_fees\"       => \"0\"\n  \"funds\"           => \"14.92537313\"\n  \"type\"            => \"market\"\n\n\n\n\n\n","category":"method"},{"location":"#CoinbaseProExchange.place_limit_order-Tuple{String, String, Union{Float64, Int64}, Union{Float64, Int64}, UserInfo}","page":"User Guide","title":"CoinbaseProExchange.place_limit_order","text":"place_limit_order(side::String, pair::String, amount::IntOrFloat, price::IntOrFloat, \n                  user_data::UserInfo)\n\nPlace a limit order using the information provided.\n\nArguments\n\nside::String : \"buy\" or \"sell\"\npair::String : Specify currency pair, for example \"ETH-EUR\"\namount::IntOrFloat : Specify amount in base currency (ETH, BTC etc.) \nuser_data::UserInfo : API data\n\nExample\n\njulia> place_limit_order(\"sell\", \"BTC-EUR\", 0.0005, 30000, user_data)\n[ Info: Order placed\nDict{String, Any} with 15 entries:\n  \"created_at\"     => \"2021-07-04T21:59:11.083132Z\"\n  \"price\"          => \"30000\"\n  \"stp\"            => \"dc\"\n  \"product_id\"     => \"BTC-EUR\"\n  \"settled\"        => false\n  \"status\"         => \"pending\"\n  \"id\"             => \"cae9158e-1660-448e-bd9a-d368ce3fdc8a\"\n  \"executed_value\" => \"0\"\n  \"post_only\"      => false\n  \"size\"           => \"0.0005\"\n  \"filled_size\"    => \"0\"\n  \"side\"           => \"sell\"\n  \"time_in_force\"  => \"GTC\"\n  \"fill_fees\"      => \"0\"\n  \"type\"           => \"limit\"\n\n\n\n\n\n","category":"method"},{"location":"#CoinbaseProExchange.show_open_orders-Tuple{UserInfo}","page":"User Guide","title":"CoinbaseProExchange.show_open_orders","text":"show_open_orders(user_data::UserInfo)\n\nFetch list of open orders associated with the given API key.\n\nExample\n\njulia> show_open_orders(user_data)\n1×15 DataFrame\n Row │ created_at                   executed_value      fill_fees           filled_size  id                            ⋯\n     │ String                       String              String              String       String                        ⋯\n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 2021-07-04T22:15:03.793256Z  0.0000000000000000  0.0000000000000000  0.00000000   5591e17e-5f79-41f0-93d5-b455e ⋯\n                                                                                                      11 columns omitted\n\n\n\n\n\n","category":"method"},{"location":"#CoinbaseProExchange.show_single_order-Tuple{String, UserInfo}","page":"User Guide","title":"CoinbaseProExchange.show_single_order","text":"show_single_order(order_ID::String, user_data::UserInfo)\n\nFetch order information for a given order ID.\n\nArguments\n\norder_id::String : Order ID, can be obtained via \n\nshow_open_orders(user_data)\n\nuser_data::UserInfo : API data\n\nExample\n\njulia> show_single_order(\"14c0db51-ca17-4a8d-9d2c-aa633e703358\", user_data)\n1×15 DataFrame\n Row │ created_at                 executed_value      fill_fees           filled_size  id                              ⋯\n     │ String                     String              String              String       String                          ⋯\n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 2021-07-04T23:11:02.0001Z  0.0000000000000000  0.0000000000000000  0.00000000   14c0db51-ca17-4a8d-9d2c-aa633e7 ⋯\n                                                                                                      11 columns omitted\n\n\n\n\n\n","category":"method"},{"location":"#CoinbaseProExchange.cancel_order-Tuple{String, UserInfo}","page":"User Guide","title":"CoinbaseProExchange.cancel_order","text":"cancel_order(order_id::String, user_data::UserInfo)\n\nCancel an order with a given order ID.\n\nArguments\n\norder_id::String : Order ID, can be obtained via \n\nshow_open_orders(user_data)\n\nuser_data::UserInfo : API data\n\nExample\n\njulia>cancel_order(\"5591e17e-5f79-41f0-93d5-b455ec552ecc\", user_data)\n\"5591e17e-5f79-41f0-93d5-b455ec552ecc\"\n\n\n\n\n\n","category":"method"},{"location":"#CoinbaseProExchange.cancel_all_orders-Tuple{UserInfo}","page":"User Guide","title":"CoinbaseProExchange.cancel_all_orders","text":"cancel_all_orders(user_data::UserInfo)\n\nCancel all open orders from the profile associated with the API key.\n\nExample\n\njulia>cancel_all_orders(user_data)\n1-element Vector{Any}:\n \"35fa8e19-f204-40c0-b995-eb2e4e168e01\"\n\n\n\n\n\n","category":"method"}]
}
