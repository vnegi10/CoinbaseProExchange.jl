"""
    plot_historical_price(pair::String, interval::Int64 = 300)

Plot historical price data in the REPL.

# Arguments
- `pair::String` : Specify currency pair, for example "ETH-EUR"
- `interval::Int64` : Rates are returned in grouped buckets based on specified interval.
                      Choose one from [60, 300 (default), 900, 3600, 21600, 86400], all in seconds.

# Example
```julia-repl
julia> plot_historical_price("ETH-EUR", 86400)
                             ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Closing price for ETH-EUR in intervals of 86400 seconds⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
                             ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ 
                       2 400 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣆⡆⠀⠀⠀⠀┃ 
                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢻⢳⡀⠀⠀⠀┃ 
                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠈⠀⢱⠀⠀⠀┃ 
                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⡄⠀⠀⠀⡀⣠⠀⡜⠀⠀⢸⠀⣠⡀┃ 
                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠃⣷⡄⢰⡆⣷⣿⡀⡇⠀⠀⢸⢠⡟⠉┃ 
                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠋⢣⡸⠹⠃⠸⠻⠃⠀⠀⠈⠋⠀⠀┃ 
                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⢸⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
   Closing price [EUR]       ┃⢰⢻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⣧⠀⡴⢆⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                             ┃⡸⢸⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⢿⡰⡇⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                             ┃⡇⠈⡆⠀⠀⢸⡇⠀⠀⠀⠀⢰⢢⢢⡄⠀⠀⠀⣀⢀⠞⡆⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⡾⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                             ┃⠁⠀⢷⡼⢻⡞⢣⡄⢀⣠⣾⠞⠈⠸⢳⠀⠀⢸⠋⢿⠀⠱⠶⡏⠢⢦⡠⠦⣆⣠⠤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⡞⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                             ┃⠀⠀⠀⠁⠀⠀⠀⠙⠁⠀⠀⠀⠀⠀⠈⢦⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣆⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⣀⢠⡇⠀⡀⠀⡀⡀⠀⡰⠛⣦⡀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠃⠉⠘⠙⠉⣦⠋⠹⠤⠃⠀⠁⢇⣀⣦⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                       1 400 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                             ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ 
                             ⠀2023-04-11T00:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2024-02-04T00:00:00⠀ 
                             ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
```
"""
function plot_historical_price(pair::String, interval::Int64 = 300)

    df_candles, closest_match = show_historical_data(pair, interval)

    currency = split(pair, "-")[2]

    plt = lineplot(
        df_candles[!, :time],
        df_candles[!, :close],
        title  = "Closing price for $(pair) in intervals of $(closest_match) seconds",
        xlabel = "Time",
        ylabel = "Closing price [$(currency)]",
        xticks = true,
        yticks = true,
        border = :bold,
        color = :cyan,
        canvas = BrailleCanvas,
        width = 75,
        height = 15,
        grid = true
    )

    return plt

end

"""
    plot_historical_vol(pair::String, interval::Int64 = 300)

Plot historical volume data in the REPL.

# Arguments
- `pair::String` : Specify currency pair, for example "ETH-EUR"
- `interval::Int64` : Rates are returned in grouped buckets based on specified interval.
                      Choose one from [60, 300 (default), 900, 3600, 21600, 86400], all in seconds.

# Example
```julia-repl
julia> plot_historical_vol("ETH-EUR", 21600)
                               ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Volume for ETH-EUR in intervals of 21600 seconds⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
                               ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ 
                         6 000 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⡇⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⡆⡇⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⣷⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡇⡀⠀⠀⠀⡀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
   Number of coins [ETH]       ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⡇⠀⠀⠀⡇⡀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⢀⣿⡇⡇⠀⠀⠀⣷⡇⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                               ┃⠀⡇⠀⠀⠀⠀⠀⡀⡄⠀⠀⠀⢸⣸⡇⠀⡄⠀⠀⠀⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⡆⠀⡇⠀⠀⢸⣿⣇⢿⠀⠀⠀⣿⣷⠉⣿⢇⠀⣦⠀⠀⠀⡇⠀⠀⠀⡆⡇⠀⡀⡄⠀⠀⠀⠀⠀⠀⠀⠀┃ 
                               ┃⣠⡇⢠⡆⠀⠀⢰⣿⡇⢸⡇⡆⢸⣿⡇⢰⣇⡆⠀⢰⡇⠀⡆⠀⠀⠀⠀⠀⡆⣠⣿⡇⠀⠀⠀⢀⡇⢰⡇⠀⠀⢸⢸⣿⠘⡄⠀⢸⢿⠇⠀⢻⢸⠀⣿⠀⠀⠀⣷⡀⠀⢀⢷⣇⠀⡇⡇⠀⠀⠀⡇⠀⠀⠀⠀┃ 
                               ┃⣿⣧⣼⡇⠀⢀⣸⣿⣇⣸⡇⡇⡜⣿⣷⣿⣿⡇⠀⣼⣧⣧⣷⡀⠀⠀⢀⢰⣧⣿⣿⡇⠀⠀⠀⢸⢣⣿⡇⠀⠀⡜⠀⢿⠀⡇⠀⢸⢸⠀⠀⢸⢸⠀⣿⡄⡇⣧⢻⡇⠀⢸⢸⢻⡇⣇⡇⠀⠀⡆⡇⣷⡆⠀⠀┃ 
                               ┃⣿⣿⣿⡇⢠⣾⣿⣿⣿⡏⡇⣧⠃⣿⢻⣿⣿⣿⡄⡇⢹⢹⣿⣧⡄⠀⢸⣾⣿⣿⢹⡇⣠⠀⢠⣾⠘⣿⡇⠀⠀⡇⠀⢸⠀⡇⠀⡎⠈⠀⠀⠈⢸⣆⡏⣿⢱⢻⢸⡇⠀⢸⢸⢸⢧⣿⢱⠀⠀⡇⣿⣿⢇⡇⠀┃ 
                               ┃⢿⢿⣿⣇⣼⣿⢿⣿⢿⠁⣧⢿⠀⠘⠘⣿⠸⢿⣧⡇⠀⠀⢸⠛⢧⣧⠾⠈⣿⢹⠘⢣⡟⢦⠃⣿⠀⠁⢣⢾⢻⠃⠀⠈⠀⢷⣤⠃⠀⠀⠀⠀⠘⠸⠀⠸⢸⠸⢸⢣⡀⡸⢸⠈⢸⢸⠸⢤⢿⢸⢻⠸⢸⡇⠀┃ 
                             0 ┃⠀⠀⠛⠙⠉⠈⠀⠘⠀⠀⠻⠈⠀⠀⠀⠙⠀⠈⠙⠀⠀⠀⠈⠀⠈⠃⠀⠀⠘⠀⠀⠈⠀⠈⠀⠈⠀⠀⠘⠈⠈⠀⠀⠀⠀⠘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠸⠱⠁⠈⠀⠈⠘⠀⠀⠈⠈⠀⠀⠈⠘⠳┃ 
                               ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ 
                               ⠀2023-11-21T12:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2024-02-04T06:00:00⠀ 
                               ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
```
"""
function plot_historical_vol(pair::String, interval::Int64 = 300)

    df_candles, closest_match = show_historical_data(pair, interval)

    coin = split(pair, "-")[1]

    plt = lineplot(
        df_candles[!, :time],
        df_candles[!, :volume],
        title  = "Volume for $(pair) in intervals of $(closest_match) seconds",
        xlabel = "Time",
        ylabel = "Number of coins [$(coin)]",
        xticks = true,
        yticks = true,
        border = :bold,
        color = :red,
        canvas = BrailleCanvas,
        width = 75,
        height = 15,
        grid = true
    )

    return plt

end